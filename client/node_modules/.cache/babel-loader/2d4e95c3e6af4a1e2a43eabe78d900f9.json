{"ast":null,"code":"export default function validate(newUser, setError, userData) {\n  let errors = {};\n  let isValid = true;\n\n  if (userData.find(user => user.email === newUser[\"email\"])) {\n    isValid = false;\n    errors[\"email\"] = \"El email ya esta en uso\";\n  }\n\n  if (userData.find(user => user.username === newUser[\"username\"])) {\n    isValid = false;\n    errors[\"username\"] = \"El usuario ya existe\";\n  }\n\n  if (typeof newUser[\"email\"] !== undefined) {\n    var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n\n    if (!pattern.test(newUser[\"email\"])) {\n      isValid = false;\n      errors[\"email\"] = \"Por favor ingresa un email válido\";\n    }\n  }\n\n  if (typeof newUser[\"name\"] !== undefined && typeof newUser[\"lastname\"] !== undefined) {\n    var patternname = new RegExp(/^[a-zA-Z ]{2,30}$/);\n\n    if (!patternname.test(newUser[\"name\"])) {\n      isValid = false;\n      errors[\"name\"] = \"Por favor ingresa un nombre válido\";\n    }\n\n    if (!patternname.test(newUser[\"lastname\"])) {\n      isValid = false;\n      errors[\"name\"] = \"Por favor ingresa un nombre válido\";\n    }\n  }\n\n  if (typeof newUser[\"password\"] !== undefined && typeof newUser[\"confirmPassword\"] !== undefined) {\n    if (newUser[\"password\"] !== newUser[\"confirmPassword\"]) {\n      isValid = false;\n      errors[\"password\"] = \"Las contraseñas no coinciden.\";\n    }\n\n    if (newUser[\"password\"].length < 6) {\n      isValid = false;\n      errors[\"password\"] = \"La contraseña debe contener al menos 6 caracteres\";\n    }\n  }\n\n  if (newUser[\"telNum1\"] && typeof newUser[\"telNum1\"] !== undefined) {\n    var patternphone = new RegExp(/^[0-9]{8,30}$/);\n\n    if (!patternphone.test(newUser[\"telNum1\"])) {\n      isValid = false;\n      errors[\"phone\"] = \"Por favor ingresa un telefono válido\";\n    }\n  }\n\n  setError(errors);\n  return isValid;\n}","map":{"version":3,"sources":["C:/Users/Gaston/Desktop/PG-HENRY/PG-project/client/src/Tools/validations.js"],"names":["validate","newUser","setError","userData","errors","isValid","find","user","email","username","undefined","pattern","RegExp","test","patternname","length","patternphone"],"mappings":"AAAA,eAAe,SAASA,QAAT,CAAkBC,OAAlB,EAA2BC,QAA3B,EAAqCC,QAArC,EAA8C;AACzD,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,OAAO,GAAG,IAAd;;AAEA,MAAGF,QAAQ,CAACG,IAAT,CAAcC,IAAI,IAAGA,IAAI,CAACC,KAAL,KAAaP,OAAO,CAAC,OAAD,CAAzC,CAAH,EAAuD;AACrDI,IAAAA,OAAO,GAAG,KAAV;AACAD,IAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB,yBAAlB;AACD;;AAED,MAAGD,QAAQ,CAACG,IAAT,CAAcC,IAAI,IAAGA,IAAI,CAACE,QAAL,KAAgBR,OAAO,CAAC,UAAD,CAA5C,CAAH,EAA6D;AAC3DI,IAAAA,OAAO,GAAG,KAAV;AACAD,IAAAA,MAAM,CAAC,UAAD,CAAN,GAAqB,sBAArB;AACD;;AAED,MAAI,OAAOH,OAAO,CAAC,OAAD,CAAd,KAA4BS,SAAhC,EAA2C;AAEzC,QAAIC,OAAO,GAAG,IAAIC,MAAJ,CAAW,iSAAX,CAAd;;AACA,QAAI,CAACD,OAAO,CAACE,IAAR,CAAaZ,OAAO,CAAC,OAAD,CAApB,CAAL,EAAqC;AACnCI,MAAAA,OAAO,GAAG,KAAV;AACAD,MAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB,mCAAlB;AACD;AACF;;AACD,MAAI,OAAOH,OAAO,CAAC,MAAD,CAAd,KAA2BS,SAA3B,IAAwC,OAAOT,OAAO,CAAC,UAAD,CAAd,KAA+BS,SAA3E,EAAsF;AAEpF,QAAII,WAAW,GAAG,IAAIF,MAAJ,CAAY,mBAAZ,CAAlB;;AACA,QAAI,CAACE,WAAW,CAACD,IAAZ,CAAiBZ,OAAO,CAAC,MAAD,CAAxB,CAAL,EAAwC;AACtCI,MAAAA,OAAO,GAAG,KAAV;AACAD,MAAAA,MAAM,CAAC,MAAD,CAAN,GAAiB,oCAAjB;AACD;;AACD,QAAI,CAACU,WAAW,CAACD,IAAZ,CAAiBZ,OAAO,CAAC,UAAD,CAAxB,CAAL,EAA4C;AAC1CI,MAAAA,OAAO,GAAG,KAAV;AACAD,MAAAA,MAAM,CAAC,MAAD,CAAN,GAAiB,oCAAjB;AACD;AACF;;AAED,MAAI,OAAOH,OAAO,CAAC,UAAD,CAAd,KAA+BS,SAA/B,IAA4C,OAAOT,OAAO,CAAC,iBAAD,CAAd,KAAsCS,SAAtF,EAAiG;AAE/F,QAAIT,OAAO,CAAC,UAAD,CAAP,KAAwBA,OAAO,CAAC,iBAAD,CAAnC,EAAwD;AACtDI,MAAAA,OAAO,GAAG,KAAV;AACAD,MAAAA,MAAM,CAAC,UAAD,CAAN,GAAqB,+BAArB;AACD;;AACD,QAAIH,OAAO,CAAC,UAAD,CAAP,CAAoBc,MAApB,GAA2B,CAA/B,EAAkC;AAChCV,MAAAA,OAAO,GAAG,KAAV;AACAD,MAAAA,MAAM,CAAC,UAAD,CAAN,GAAqB,mDAArB;AACD;AACF;;AACD,MAAIH,OAAO,CAAC,SAAD,CAAP,IAAsB,OAAOA,OAAO,CAAC,SAAD,CAAd,KAA8BS,SAAxD,EAAmE;AACjE,QAAIM,YAAY,GAAG,IAAIJ,MAAJ,CAAY,eAAZ,CAAnB;;AACA,QAAI,CAACI,YAAY,CAACH,IAAb,CAAkBZ,OAAO,CAAC,SAAD,CAAzB,CAAL,EAA4C;AAC1CI,MAAAA,OAAO,GAAG,KAAV;AACAD,MAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB,sCAAlB;AACD;AACF;;AAGDF,EAAAA,QAAQ,CAACE,MAAD,CAAR;AACA,SAAOC,OAAP;AACH","sourcesContent":["export default function validate(newUser, setError, userData){\r\n    let errors = {};\r\n    let isValid = true;\r\n\r\n    if(userData.find(user=> user.email===newUser[\"email\"])){\r\n      isValid = false;\r\n      errors[\"email\"] = \"El email ya esta en uso\";\r\n    }\r\n\r\n    if(userData.find(user=> user.username===newUser[\"username\"])){\r\n      isValid = false;\r\n      errors[\"username\"] = \"El usuario ya existe\";\r\n    }\r\n\r\n    if (typeof newUser[\"email\"] !== undefined) {\r\n        \r\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n      if (!pattern.test(newUser[\"email\"])) {\r\n        isValid = false;\r\n        errors[\"email\"] = \"Por favor ingresa un email válido\";\r\n      }\r\n    }\r\n    if (typeof newUser[\"name\"] !== undefined && typeof newUser[\"lastname\"] !== undefined) {\r\n        \r\n      var patternname = new RegExp( /^[a-zA-Z ]{2,30}$/);\r\n      if (!patternname.test(newUser[\"name\"])) {\r\n        isValid = false;\r\n        errors[\"name\"] = \"Por favor ingresa un nombre válido\";\r\n      }\r\n      if (!patternname.test(newUser[\"lastname\"])) {\r\n        isValid = false;\r\n        errors[\"name\"] = \"Por favor ingresa un nombre válido\";\r\n      }\r\n    }\r\n\r\n    if (typeof newUser[\"password\"] !== undefined && typeof newUser[\"confirmPassword\"] !== undefined) {\r\n        \r\n      if (newUser[\"password\"] !== newUser[\"confirmPassword\"]) {\r\n        isValid = false;\r\n        errors[\"password\"] = \"Las contraseñas no coinciden.\";\r\n      }\r\n      if (newUser[\"password\"].length<6) {\r\n        isValid = false;\r\n        errors[\"password\"] = \"La contraseña debe contener al menos 6 caracteres\";\r\n      }\r\n    } \r\n    if (newUser[\"telNum1\"] && typeof newUser[\"telNum1\"] !== undefined) {\r\n      var patternphone = new RegExp( /^[0-9]{8,30}$/);\r\n      if (!patternphone.test(newUser[\"telNum1\"])) {\r\n        isValid = false;\r\n        errors[\"phone\"] = \"Por favor ingresa un telefono válido\";\r\n      }\r\n    }\r\n\r\n\r\n    setError(errors)\r\n    return isValid;\r\n}"]},"metadata":{},"sourceType":"module"}