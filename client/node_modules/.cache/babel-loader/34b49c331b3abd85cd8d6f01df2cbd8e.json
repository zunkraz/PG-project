{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gaston\\\\Desktop\\\\PG-HENRY\\\\PG-project\\\\client\\\\src\\\\Visuals\\\\Components\\\\LoginComponents\\\\LoginComponentsContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllUsers } from '../../../Controllers/actions/userActions';\nimport LoginFormComponents from './LoginFormComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginComponentsContainer() {\n  _s();\n\n  //funcion que llame el listado de usernames y mails\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAllUsers());\n  }, []);\n  const users = useSelector(state => state.userReducer.users);\n  const userNames = users.map(elem => elem.username);\n  const userMails = users.map(elem => elem.email);\n  console.log(userNames);\n  console.log(userMails);\n  const [userFind, setUserFind] = useState('');\n  const [Pass, setPass] = useState();\n  const [passVerified, setPassVerified] = useState('');\n  console.log('user Find => ' + userFind);\n  console.log('PASS => ' + Pass);\n  console.log('USER PASS => ' + passVerified);\n  const [userFields, setuserFields] = useState({\n    userReady: '',\n    password: '',\n    repassword: ''\n  });\n\n  const handleFields = e => {\n    console.log('name => ' + e.target.name);\n    console.log('value => ' + e.target.value);\n\n    if (e.target.name === 'username') {\n      setuserFields({ ...userFields,\n        userReady: e.target.value\n      });\n\n      if (userNames.includes(e.target.value)) {\n        setUserFind('User Coincidence');\n        cleanErrors('userReady');\n        return;\n      } else if (!userNames.includes(e.target.value)) {\n        setUserFind('');\n        handleErrors(e.target.name);\n      }\n\n      userFind.length === 0 && setErrors({\n        userReady: 'have some error',\n        password: 'have some error'\n      });\n      return;\n    }\n\n    if (e.target.name === 'email') {\n      console.log(e.target.value);\n\n      if (userMails.includes(e.target.value)) {\n        setUserFind('User Coincidence');\n        cleanErrors('userReady');\n        setuserFields({ ...userFields,\n          userReady: e.target.value\n        });\n        return;\n      } else if (!userNames.includes(e.target.value)) {\n        setUserFind('');\n        handleErrors(e.target.name);\n      }\n\n      return;\n    }\n\n    if (e.target.name === 'password') {\n      setPass(e.target.value);\n      return;\n    }\n\n    if (e.target.name === 'repassword') {\n      if (e.target.value === Pass) {\n        setPassVerified('Password Verified');\n        cleanErrors('password');\n      }\n\n      return;\n    }\n  };\n\n  const [errors, setErrors] = useState({\n    userReady: 'have some error',\n    password: 'have some error'\n  });\n\n  const handleErrors = () => {\n    if (userFind.length > 0) {\n      setErrors({ ...errors,\n        userReady: ''\n      });\n      return;\n    }\n\n    if (passVerified.length > 0) {\n      setErrors({ ...errors,\n        password: ''\n      });\n      return;\n    }\n  };\n\n  const cleanErrors = prop => {\n    setErrors({ ...errors,\n      [prop]: ''\n    });\n  };\n\n  const logIn = () => {\n    alert('Ingresando');\n  };\n\n  console.log('User Fields =>> ');\n  console.log(userFields);\n  console.log('User Errors =>>');\n  console.log(errors);\n  const classSelectBtn = `bg-gray-200 px-8 py-4 w-96 mt-5 rounded-xl font-semibold \n                            text-3xl uppercase tracking-widest text-gray-100 \n                            cursor-pointer hover:bg-gray-400 duration-1000\n                            border-2 border-gray-200 shadow-xl ring-4 ring-gray-300 ring-opacity-50`;\n  const classLogBtn = `bg-transparent px-8 py-4 w-96 mt-5 rounded-xl font-semibold \n                text-3xl uppercase tracking-widest text-gray-100 \n                cursor-pointer hover:bg-red-300 duration-1000\n                border-2 border-gray-200 shadow-xl `;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"flex flex-col items-center justify-start mt-44 h-screen\",\n    children: /*#__PURE__*/_jsxDEV(LoginFormComponents, {\n      classSelectBtn: classSelectBtn,\n      classLogBtn: classLogBtn,\n      handleFields: handleFields,\n      logIn: logIn,\n      tagUser: userFind,\n      tagPass: passVerified,\n      tagRePass: passVerified\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginComponentsContainer, \"8vCe51ZCpmjcAp4abi8vkk/s7Ks=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LoginComponentsContainer;\nexport default LoginComponentsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginComponentsContainer\");","map":{"version":3,"sources":["C:/Users/Gaston/Desktop/PG-HENRY/PG-project/client/src/Visuals/Components/LoginComponents/LoginComponentsContainer.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","getAllUsers","LoginFormComponents","LoginComponentsContainer","dispatch","users","state","userReducer","userNames","map","elem","username","userMails","email","console","log","userFind","setUserFind","Pass","setPass","passVerified","setPassVerified","userFields","setuserFields","userReady","password","repassword","handleFields","e","target","name","value","includes","cleanErrors","handleErrors","length","setErrors","errors","prop","logIn","alert","classSelectBtn","classLogBtn"],"mappings":"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","sourcesContent":["import React , { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAllUsers } from '../../../Controllers/actions/userActions'\r\n\r\nimport LoginFormComponents from './LoginFormComponents'\r\n\r\n\r\n\r\nfunction LoginComponentsContainer() {\r\n\r\n    //funcion que llame el listado de usernames y mails\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n        dispatch(getAllUsers())\r\n    },[])\r\n\r\n    const users = useSelector(state => state.userReducer.users)\r\n    const userNames = users.map(elem=>elem.username)\r\n    const userMails = users.map(elem=>elem.email)\r\n    console.log(userNames)\r\n    console.log(userMails)\r\n\r\n    const [userFind, setUserFind] = useState('')\r\n    const [Pass, setPass] = useState()\r\n    const [passVerified, setPassVerified] = useState('')\r\n\r\n    console.log('user Find => '+ userFind)\r\n    console.log('PASS => ' + Pass)\r\n    console.log('USER PASS => ' + passVerified)\r\n    \r\n    const [userFields, setuserFields] = useState({\r\n        userReady:'',\r\n        password:'',\r\n        repassword:''\r\n    })\r\n    const handleFields=(e)=>{\r\n        console.log('name => '+ e.target.name)\r\n        console.log('value => '+ e.target.value)\r\n\r\n        if(e.target.name==='username'){\r\n            setuserFields({\r\n                ...userFields, userReady:e.target.value\r\n            })\r\n                if(userNames.includes(e.target.value)){\r\n                    setUserFind('User Coincidence')\r\n                    cleanErrors('userReady')\r\n                    return\r\n                }else if(!userNames.includes(e.target.value)){\r\n                    setUserFind('')\r\n                    handleErrors(e.target.name)\r\n                }\r\n                userFind.length===0 && setErrors({\r\n                    userReady:'have some error',\r\n                    password:'have some error'\r\n                })\r\n            return\r\n        }\r\n        if(e.target.name==='email'){\r\n            console.log(e.target.value)\r\n            if(userMails.includes(e.target.value)){\r\n                setUserFind('User Coincidence')\r\n                cleanErrors('userReady')\r\n                setuserFields({\r\n                    ...userFields, userReady:e.target.value\r\n                })\r\n                return\r\n            }else if(!userNames.includes(e.target.value)){\r\n                setUserFind('')\r\n                handleErrors(e.target.name)\r\n            }\r\n            \r\n            return\r\n        }\r\n        if(e.target.name==='password'){\r\n            \r\n            setPass(e.target.value)\r\n            return\r\n        }\r\n        if(e.target.name==='repassword'){\r\n            if(e.target.value===Pass){\r\n                setPassVerified('Password Verified')\r\n                cleanErrors('password')\r\n            }\r\n            return\r\n        }\r\n    }\r\n\r\n    const [errors, setErrors] = useState({\r\n        userReady:'have some error',\r\n        password:'have some error'\r\n    })\r\n\r\n    const handleErrors=()=>{\r\n        if(userFind.length>0){\r\n            setErrors({\r\n                ...errors, userReady:'' \r\n            })\r\n            return;\r\n        }\r\n        if(passVerified.length>0){\r\n            setErrors({\r\n                ...errors, password:'' \r\n            })\r\n            return\r\n        }\r\n    }\r\n\r\n    const cleanErrors=(prop)=>{\r\n        setErrors({\r\n            ...errors, [prop]:''\r\n        })\r\n    }\r\n    const logIn = ()=>{alert('Ingresando')}\r\n    console.log('User Fields =>> ')\r\n    console.log(userFields)\r\n\r\n    console.log('User Errors =>>')\r\n    console.log(errors)\r\n\r\n\r\n    const classSelectBtn = `bg-gray-200 px-8 py-4 w-96 mt-5 rounded-xl font-semibold \r\n                            text-3xl uppercase tracking-widest text-gray-100 \r\n                            cursor-pointer hover:bg-gray-400 duration-1000\r\n                            border-2 border-gray-200 shadow-xl ring-4 ring-gray-300 ring-opacity-50`\r\n\r\n    const classLogBtn=`bg-transparent px-8 py-4 w-96 mt-5 rounded-xl font-semibold \r\n                text-3xl uppercase tracking-widest text-gray-100 \r\n                cursor-pointer hover:bg-red-300 duration-1000\r\n                border-2 border-gray-200 shadow-xl `\r\n\r\n\r\n    return (\r\n        <div class='flex flex-col items-center justify-start mt-44 h-screen'>\r\n            <LoginFormComponents    classSelectBtn={classSelectBtn} \r\n                                    classLogBtn={classLogBtn} \r\n                                    handleFields={handleFields}\r\n                                    logIn={logIn}\r\n                                    tagUser={userFind}\r\n                                    tagPass={passVerified}\r\n                                    tagRePass={passVerified}\r\n                                    />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginComponentsContainer\r\n"]},"metadata":{},"sourceType":"module"}