{"ast":null,"code":"export function Filter(obj, arr) {\n  const {\n    name,\n    profesion,\n    country,\n    min,\n    max,\n    likes\n  } = obj; //Primero filtramos por nombre\n  //hay que colocar la regex para los acentos\n\n  if (name) {\n    let arrOne = name.split(' ').map(e => e.charAt(0).toUpperCase() + e.slice(1));\n    let firstName = arrOne[0];\n\n    if (arrOne[1]) {\n      let lastName = arrOne[1];\n      arr = arr.filter(e => e.name === firstName).filter(e => e.lastname === lastName);\n    } else {\n      arr = arr.filter(e => e.name === firstName);\n    }\n  }\n\n  if (profesion) {\n    arr = arr.filter(e => e.category[0].name === profesion);\n  }\n\n  if (country) {\n    arr = arr.filter(e => e.country.name === country);\n  } //Likes Funciona colocar valor de regla\n\n\n  if (likes) {\n    const likesTotal = arr.map(e => e.likes).reduce((a, b) => a + b, 0);\n    const dislikesTotal = arr.map(e => e.dislikes).reduce((a, b) => a + b, 0); //Los valores de likes y dislikes son demasiado altos. \n\n    let val = (likesTotal + dislikesTotal) / 2;\n\n    switch (likes) {\n      case 'Iniciado':\n        arr = arr.filter(e => e.likes < val / 3);\n        break;\n\n      case 'Intermedio':\n        arr = arr.filter(e => e.likes > val / 3 && e.likes < val / 2);\n        break;\n\n      case 'Popular':\n        arr = arr.filter(e => e.likes > val / 2);\n        break;\n\n      default:\n        break;\n    }\n  } // if(min && max){\n  //     console.log(200)\n  // }\n\n\n  return arr;\n}\n_c = Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["C:/Users/Gaston/Desktop/PG-HENRY/PG-project/client/src/Visuals/Components/SearchBarPro/Helper.js"],"names":["Filter","obj","arr","name","profesion","country","min","max","likes","arrOne","split","map","e","charAt","toUpperCase","slice","firstName","lastName","filter","lastname","category","likesTotal","reduce","a","b","dislikesTotal","dislikes","val"],"mappings":"AAAA,OAAO,SAASA,MAAT,CAAgBC,GAAhB,EAAoBC,GAApB,EAAwB;AAC3B,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA,SAAN;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA,GAA1B;AAA8BC,IAAAA,GAA9B;AAAmCC,IAAAA;AAAnC,MAA4CP,GAAlD,CAD2B,CAE3B;AACA;;AACA,MAAGE,IAAH,EAAQ;AACJ,QAAIM,MAAM,GAAGN,IAAI,CAACO,KAAL,CAAW,GAAX,EAAgBC,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACC,MAAF,CAAS,CAAT,EAAYC,WAAZ,KAA4BF,CAAC,CAACG,KAAF,CAAQ,CAAR,CAArD,CAAb;AACA,QAAIC,SAAS,GAAGP,MAAM,CAAC,CAAD,CAAtB;;AACA,QAAGA,MAAM,CAAC,CAAD,CAAT,EAAa;AACT,UAAIQ,QAAQ,GAAGR,MAAM,CAAC,CAAD,CAArB;AACAP,MAAAA,GAAG,GAAIA,GAAG,CAACgB,MAAJ,CAAWN,CAAC,IAAIA,CAAC,CAACT,IAAF,KAAWa,SAA3B,CAAD,CAAwCE,MAAxC,CAA+CN,CAAC,IAAIA,CAAC,CAACO,QAAF,KAAeF,QAAnE,CAAN;AACH,KAHD,MAGK;AACDf,MAAAA,GAAG,GAAGA,GAAG,CAACgB,MAAJ,CAAWN,CAAC,IAAIA,CAAC,CAACT,IAAF,KAAWa,SAA3B,CAAN;AACH;AAGJ;;AACD,MAAGZ,SAAH,EAAa;AACTF,IAAAA,GAAG,GAAGA,GAAG,CAACgB,MAAJ,CAAWN,CAAC,IAAIA,CAAC,CAACQ,QAAF,CAAW,CAAX,EAAcjB,IAAd,KAAuBC,SAAvC,CAAN;AACH;;AACD,MAAGC,OAAH,EAAW;AAEPH,IAAAA,GAAG,GAAGA,GAAG,CAACgB,MAAJ,CAAWN,CAAC,IAAIA,CAAC,CAACP,OAAF,CAAUF,IAAV,KAAmBE,OAAnC,CAAN;AAEH,GAvB0B,CAyB3B;;;AACA,MAAGG,KAAH,EAAS;AACL,UAAMa,UAAU,GAAGnB,GAAG,CAACS,GAAJ,CAAQC,CAAC,IAAIA,CAAC,CAACJ,KAAf,EAAsBc,MAAtB,CAA6B,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,GAAGC,CAA1C,EAA6C,CAA7C,CAAnB;AACA,UAAMC,aAAa,GAAGvB,GAAG,CAACS,GAAJ,CAAQC,CAAC,IAAIA,CAAC,CAACc,QAAf,EAAyBJ,MAAzB,CAAgC,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,GAAGC,CAA7C,EAAgD,CAAhD,CAAtB,CAFK,CAGN;;AACC,QAAIG,GAAG,GAAG,CAACN,UAAU,GAACI,aAAZ,IAA2B,CAArC;;AACA,YAAQjB,KAAR;AACI,WAAK,UAAL;AAEIN,QAAAA,GAAG,GAAGA,GAAG,CAACgB,MAAJ,CAAWN,CAAC,IAAIA,CAAC,CAACJ,KAAF,GAAWmB,GAAG,GAAC,CAA/B,CAAN;AACA;;AACJ,WAAK,YAAL;AAEIzB,QAAAA,GAAG,GAAGA,GAAG,CAACgB,MAAJ,CAAWN,CAAC,IAAIA,CAAC,CAACJ,KAAF,GAAWmB,GAAG,GAAC,CAAf,IAAqBf,CAAC,CAACJ,KAAF,GAAWmB,GAAG,GAAC,CAApD,CAAN;AACA;;AACJ,WAAK,SAAL;AAEIzB,QAAAA,GAAG,GAAGA,GAAG,CAACgB,MAAJ,CAAWN,CAAC,IAAIA,CAAC,CAACJ,KAAF,GAAWmB,GAAG,GAAC,CAA/B,CAAN;AACA;;AACJ;AACI;AAdR;AAgBH,GA/C0B,CAgD3B;AACA;AACA;;;AAEC,SAAOzB,GAAP;AACJ;KArDeF,M","sourcesContent":["export function Filter(obj,arr){\r\n    const {name,profesion, country, min,max, likes} = obj\r\n    //Primero filtramos por nombre\r\n    //hay que colocar la regex para los acentos\r\n    if(name){\r\n        let arrOne = name.split(' ').map(e => e.charAt(0).toUpperCase() + e.slice(1));\r\n        let firstName = arrOne[0];\r\n        if(arrOne[1]){\r\n            let lastName = arrOne[1];\r\n            arr = (arr.filter(e => e.name === firstName)).filter(e => e.lastname === lastName);\r\n        }else{\r\n            arr = arr.filter(e => e.name === firstName)\r\n        }\r\n       \r\n        \r\n    }\r\n    if(profesion){\r\n        arr = arr.filter(e => e.category[0].name === profesion);\r\n    }\r\n    if(country){\r\n     \r\n        arr = arr.filter(e => e.country.name === country);\r\n      \r\n    }\r\n\r\n    //Likes Funciona colocar valor de regla\r\n    if(likes){\r\n        const likesTotal = arr.map(e => e.likes).reduce((a,b) => a + b, 0)\r\n        const dislikesTotal = arr.map(e => e.dislikes).reduce((a,b) => a + b, 0)\r\n       //Los valores de likes y dislikes son demasiado altos. \r\n        let val = (likesTotal+dislikesTotal)/2;\r\n        switch (likes) {\r\n            case 'Iniciado':\r\n               \r\n                arr = arr.filter(e => e.likes < (val/3))\r\n                break;\r\n            case 'Intermedio':\r\n                \r\n                arr = arr.filter(e => e.likes > (val/3) && e.likes < (val/2));\r\n                break;\r\n            case 'Popular':\r\n              \r\n                arr = arr.filter(e => e.likes > (val/2));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    // if(min && max){\r\n    //     console.log(200)\r\n    // }\r\n        \r\n     return arr\r\n}"]},"metadata":{},"sourceType":"module"}