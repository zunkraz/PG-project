{"ast":null,"code":"export default function validate(newUser, setError) {\n  let errors = {};\n  let isValid = true;\n\n  if (typeof newUser[\"email\"] !== undefined) {\n    var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\n\n    if (!pattern.test(newUser[\"email\"])) {\n      isValid = false;\n      errors[\"email\"] = \"Por favor ingresa un email válido\";\n    }\n  }\n\n  if (typeof newUser[\"name\"] !== undefined && typeof newUser[\"lastName\"] !== undefined) {\n    var patternname = new RegExp(/^[a-zA-Z ]{2,30}$/);\n\n    if (!patternname.test(newUser[\"name\"])) {\n      isValid = false;\n      errors[\"name\"] = \"Por favor ingresa un nombre válido\";\n    }\n\n    if (!patternname.test(newUser[\"lastName\"])) {\n      isValid = false;\n      errors[\"name\"] = \"Por favor ingresa un nombre válido\";\n    }\n  }\n\n  if (typeof newUser[\"password\"] !== undefined && typeof newUser[\"confirmPassword\"] !== undefined) {\n    if (newUser[\"password\"] !== newUser[\"confirmPassword\"]) {\n      isValid = false;\n      errors[\"password\"] = \"Las contraseñas no coinciden.\";\n    }\n\n    if (newUser[\"password\"].length < 6) {\n      isValid = false;\n      errors[\"password\"] = \"La contraseña debe contener al menos 6 caracteres\";\n    }\n  }\n\n  if (newUser[\"telNum1\"] && typeof newUser[\"telNum1\"] !== undefined) {\n    var patternphone = new RegExp(/^[0-9]{8,30}$/);\n\n    if (!patternphone.test(newUser[\"telNum1\"])) {\n      isValid = false;\n      errors[\"phone\"] = \"Por favor ingresa un telefono válido\";\n    }\n  }\n\n  setError(errors);\n  return isValid;\n}","map":{"version":3,"sources":["C:/Users/Gaston/Desktop/PG-HENRY/PG-project/client/src/Tools/validations.js"],"names":["validate","newUser","setError","errors","isValid","undefined","pattern","RegExp","test","patternname","length","patternphone"],"mappings":"AAAA,eAAe,SAASA,QAAT,CAAkBC,OAAlB,EAA2BC,QAA3B,EAAoC;AAC/C,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,OAAO,GAAG,IAAd;;AAEA,MAAI,OAAOH,OAAO,CAAC,OAAD,CAAd,KAA4BI,SAAhC,EAA2C;AAEzC,QAAIC,OAAO,GAAG,IAAIC,MAAJ,CAAW,iSAAX,CAAd;;AACA,QAAI,CAACD,OAAO,CAACE,IAAR,CAAaP,OAAO,CAAC,OAAD,CAApB,CAAL,EAAqC;AACnCG,MAAAA,OAAO,GAAG,KAAV;AACAD,MAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB,mCAAlB;AACD;AACF;;AACD,MAAI,OAAOF,OAAO,CAAC,MAAD,CAAd,KAA2BI,SAA3B,IAAwC,OAAOJ,OAAO,CAAC,UAAD,CAAd,KAA+BI,SAA3E,EAAsF;AAEpF,QAAII,WAAW,GAAG,IAAIF,MAAJ,CAAY,mBAAZ,CAAlB;;AACA,QAAI,CAACE,WAAW,CAACD,IAAZ,CAAiBP,OAAO,CAAC,MAAD,CAAxB,CAAL,EAAwC;AACtCG,MAAAA,OAAO,GAAG,KAAV;AACAD,MAAAA,MAAM,CAAC,MAAD,CAAN,GAAiB,oCAAjB;AACD;;AACD,QAAI,CAACM,WAAW,CAACD,IAAZ,CAAiBP,OAAO,CAAC,UAAD,CAAxB,CAAL,EAA4C;AAC1CG,MAAAA,OAAO,GAAG,KAAV;AACAD,MAAAA,MAAM,CAAC,MAAD,CAAN,GAAiB,oCAAjB;AACD;AACF;;AAED,MAAI,OAAOF,OAAO,CAAC,UAAD,CAAd,KAA+BI,SAA/B,IAA4C,OAAOJ,OAAO,CAAC,iBAAD,CAAd,KAAsCI,SAAtF,EAAiG;AAE/F,QAAIJ,OAAO,CAAC,UAAD,CAAP,KAAwBA,OAAO,CAAC,iBAAD,CAAnC,EAAwD;AACtDG,MAAAA,OAAO,GAAG,KAAV;AACAD,MAAAA,MAAM,CAAC,UAAD,CAAN,GAAqB,+BAArB;AACD;;AACD,QAAIF,OAAO,CAAC,UAAD,CAAP,CAAoBS,MAApB,GAA2B,CAA/B,EAAkC;AAChCN,MAAAA,OAAO,GAAG,KAAV;AACAD,MAAAA,MAAM,CAAC,UAAD,CAAN,GAAqB,mDAArB;AACD;AACF;;AACD,MAAIF,OAAO,CAAC,SAAD,CAAP,IAAsB,OAAOA,OAAO,CAAC,SAAD,CAAd,KAA8BI,SAAxD,EAAmE;AACjE,QAAIM,YAAY,GAAG,IAAIJ,MAAJ,CAAY,eAAZ,CAAnB;;AACA,QAAI,CAACI,YAAY,CAACH,IAAb,CAAkBP,OAAO,CAAC,SAAD,CAAzB,CAAL,EAA4C;AAC1CG,MAAAA,OAAO,GAAG,KAAV;AACAD,MAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB,sCAAlB;AACD;AACF;;AAGDD,EAAAA,QAAQ,CAACC,MAAD,CAAR;AACA,SAAOC,OAAP;AACH","sourcesContent":["export default function validate(newUser, setError){\r\n    let errors = {};\r\n    let isValid = true;\r\n\r\n    if (typeof newUser[\"email\"] !== undefined) {\r\n        \r\n      var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n      if (!pattern.test(newUser[\"email\"])) {\r\n        isValid = false;\r\n        errors[\"email\"] = \"Por favor ingresa un email válido\";\r\n      }\r\n    }\r\n    if (typeof newUser[\"name\"] !== undefined && typeof newUser[\"lastName\"] !== undefined) {\r\n        \r\n      var patternname = new RegExp( /^[a-zA-Z ]{2,30}$/);\r\n      if (!patternname.test(newUser[\"name\"])) {\r\n        isValid = false;\r\n        errors[\"name\"] = \"Por favor ingresa un nombre válido\";\r\n      }\r\n      if (!patternname.test(newUser[\"lastName\"])) {\r\n        isValid = false;\r\n        errors[\"name\"] = \"Por favor ingresa un nombre válido\";\r\n      }\r\n    }\r\n\r\n    if (typeof newUser[\"password\"] !== undefined && typeof newUser[\"confirmPassword\"] !== undefined) {\r\n        \r\n      if (newUser[\"password\"] !== newUser[\"confirmPassword\"]) {\r\n        isValid = false;\r\n        errors[\"password\"] = \"Las contraseñas no coinciden.\";\r\n      }\r\n      if (newUser[\"password\"].length<6) {\r\n        isValid = false;\r\n        errors[\"password\"] = \"La contraseña debe contener al menos 6 caracteres\";\r\n      }\r\n    } \r\n    if (newUser[\"telNum1\"] && typeof newUser[\"telNum1\"] !== undefined) {\r\n      var patternphone = new RegExp( /^[0-9]{8,30}$/);\r\n      if (!patternphone.test(newUser[\"telNum1\"])) {\r\n        isValid = false;\r\n        errors[\"phone\"] = \"Por favor ingresa un telefono válido\";\r\n      }\r\n    }\r\n\r\n\r\n    setError(errors)\r\n    return isValid;\r\n}"]},"metadata":{},"sourceType":"module"}